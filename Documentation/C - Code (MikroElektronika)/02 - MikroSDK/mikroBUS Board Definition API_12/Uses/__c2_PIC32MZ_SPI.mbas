module __c2_PIC32MZ_SPI
include __t_PIC32

#IFDEF ENABLE_SPI THEN
sub function _spiInit_1 (dim cfg as ^const uint32_t) as T_mikrobus_ret 
sub function _spiInit_2 (dim cfg as ^const uint32_t) as T_mikrobus_ret  
sub function _spiInit_3 (dim cfg as ^const uint32_t) as T_mikrobus_ret  
sub function _spiInit_4 (dim cfg as ^const uint32_t) as T_mikrobus_ret      
#ENDIF

implements

const _MIKROBUS_ERR_SPI          as byte = 3

' ------------------------------------------------------------ SYSTEM SPECIFIC '

#IFDEF ENABLE_SPI THEN

sub function _spiInit_1 (dim cfg as ^const uint32_t) as T_mikrobus_ret
dim arg1, arg2, arg3, arg4, arg5, arg6, arg7 as ^const uint32_t
    arg1 = (cfg + 0)
    arg2 = (cfg + 1)
    arg3 = (cfg + 2)
    arg4 = (cfg + 3)
    arg5 = (cfg + 4)
    arg6 = (cfg + 5)
    arg7 = (cfg + 6)
	
	Unlock_IOLOCK()
    PPS_Mapping(_RPC4, _INPUT, _SDI2)
    PPS_Mapping(_RPC1, _OUTPUT, _SDO2)
    Lock_IOLOCK()
	
    SPI2_Init_Advanced(word(arg1^), word(arg2^), word(arg3^), word(arg4^), word(arg5^), word(arg6^), word(arg7^))
    Result = 0
end sub

sub function _spiInit_2 (dim cfg as ^const uint32_t) as T_mikrobus_ret   
dim arg1, arg2, arg3, arg4, arg5, arg6, arg7 as ^const uint32_t
    arg1 = (cfg + 0)
    arg2 = (cfg + 1)
    arg3 = (cfg + 2)
    arg4 = (cfg + 3)
    arg5 = (cfg + 4)
    arg6 = (cfg + 5)
    arg7 = (cfg + 6)
	
	Unlock_IOLOCK()
    PPS_Mapping(_RPD11, _INPUT, _SDI4)
    PPS_Mapping(_RPA15, _OUTPUT, _SDO4)
    Lock_IOLOCK()
	
    SPI4_Init_Advanced(word(arg1^), word(arg2^), word(arg3^), word(arg4^), word(arg5^), word(arg6^), word(arg7^))
    Result = 0
end sub

sub function _spiInit_3 (dim cfg as ^const uint32_t) as T_mikrobus_ret   
dim arg1, arg2, arg3, arg4, arg5, arg6, arg7 as ^const uint32_t
    arg1 = (cfg + 0)
    arg2 = (cfg + 1)
    arg3 = (cfg + 2)
    arg4 = (cfg + 3)
    arg5 = (cfg + 4)
    arg6 = (cfg + 5)
    arg7 = (cfg + 6)
	
	Unlock_IOLOCK()
    PPS_Mapping(_RPD3, _OUTPUT, _SDO1)
    PPS_Mapping(_RPD2, _INPUT, _SDI1)
    Lock_IOLOCK()
	
    SPI1_Init_Advanced(word(arg1^), word(arg2^), word(arg3^), word(arg4^), word(arg5^), word(arg6^), word(arg7^))
    Result = 0
end sub

sub function _spiInit_4 (dim cfg as ^const uint32_t) as T_mikrobus_ret   
dim arg1, arg2, arg3, arg4, arg5, arg6, arg7 as ^const uint32_t
    arg1 = (cfg + 0)
    arg2 = (cfg + 1)
    arg3 = (cfg + 2)
    arg4 = (cfg + 3)
    arg5 = (cfg + 4)
    arg6 = (cfg + 5)
    arg7 = (cfg + 6)
	
	Unlock_IOLOCK()
    PPS_Mapping(_RPD3, _OUTPUT, _SDO1)
    PPS_Mapping(_RPD2, _INPUT, _SDI1)
    Lock_IOLOCK()
	
    SPI1_Init_Advanced(word(arg1^), word(arg2^), word(arg3^), word(arg4^), word(arg5^), word(arg6^), word(arg7^))
    Result = 0
end sub

#ENDIF

end.